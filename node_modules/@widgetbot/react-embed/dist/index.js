"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
exports.__esModule = true;
var embed_api_1 = require("@widgetbot/embed-api");
var React = require("react");
var elements_1 = require("./elements");
var util_1 = require("./util");
var WidgetBot = /** @class */ (function (_super) {
    __extends(WidgetBot, _super);
    function WidgetBot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            url: null,
            id: util_1.generateUUID()
        };
        _this.api = new embed_api_1.Client({
            id: _this.state.id,
            iframe: null
        });
        return _this;
    }
    WidgetBot.getDerivedStateFromProps = function (props, state) {
        var url = props.shard + "/channels/" + props.server + (props.channel ? "/" + props.channel : '') + "/" + util_1.searchParams(__assign({}, props.options, { api: state.id }));
        return { url: url };
    };
    WidgetBot.prototype.componentDidMount = function () {
        var onAPI = this.props.onAPI;
        if (onAPI)
            onAPI(this.api);
    };
    WidgetBot.prototype.render = function () {
        var _this = this;
        var _a = this.props, defer = _a.defer, className = _a.className, style = _a.style, height = _a.height, width = _a.width;
        return (React.createElement("div", { className: className, style: __assign({}, elements_1.Root({ width: width, height: height }), style) },
            React.createElement("iframe", { src: defer ? '' : this.state.url, ref: function (ref) { return (_this.api.iframe = ref); }, style: elements_1.Embed, title: "Discord chat embed" })));
    };
    WidgetBot.defaultProps = {
        server: '299881420891881473',
        shard: 'https://e.widgetbot.io',
        options: {},
        defer: false
    };
    return WidgetBot;
}(React.PureComponent));
exports["default"] = WidgetBot;
__export(require("@widgetbot/embed-api"));
var embed_api_2 = require("@widgetbot/embed-api");
exports.API = embed_api_2.Client;
