import API from './api';
class Client extends API {
    constructor(options) {
        super();
        this.server = {
            emit: (event, data) => {
                const listeners = this.listeners[event];
                if (listeners) {
                    listeners.forEach(listener => listener(data));
                }
            }
        };
        Object.assign(this, options);
        window.addEventListener('message', ({ data }) => this.socketEvent(data));
    }
    /**
     * Emits an event to the client
     * @param event Event name
     * @param data Event data
     */
    emit(event, data) {
        if (!window.parent)
            return false;
        const parsed = JSON.stringify({
            widgetbot: true,
            id: this.id,
            event,
            data
        });
        if (this.iframe.contentWindow) {
            this.iframe.contentWindow.postMessage(parsed, '*');
            return true;
        }
        return false;
    }
}
export default Client;
//# sourceMappingURL=client.js.map