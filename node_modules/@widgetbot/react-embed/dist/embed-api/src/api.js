class API {
    constructor() {
        this.listeners = {};
    }
    socketEvent(raw) {
        try {
            var message = JSON.parse(raw);
        }
        catch (e) {
            return;
        }
        if (message instanceof Object &&
            message.widgetbot === true &&
            message.id === this.id) {
            const { event, data } = message;
            const listeners = this.listeners[event];
            if (listeners) {
                listeners.forEach(listener => listener(data));
            }
        }
    }
    /**
     * Listens to events from the client
     * @param event Event name
     * @param data Event data
     */
    on(event, callback) {
        if (!this.listeners[event])
            this.listeners[event] = [];
        const listeners = this.listeners[event];
        listeners.push(callback);
        console.debug(`[embed-api] on '${event}'`, callback);
    }
}
export default API;
//# sourceMappingURL=api.js.map