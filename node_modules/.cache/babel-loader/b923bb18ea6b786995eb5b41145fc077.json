{"ast":null,"code":"import _Row from \"antd/es/row\";\nimport _Spin from \"antd/es/spin\";\nimport _Input from \"antd/es/input\";\nimport _Col from \"antd/es/col\";\nimport _Result from \"antd/es/result\";\nimport _Button from \"antd/es/button\";\nimport _message from \"antd/es/message\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/home/ad3sh/Documents/client/src/components/campaign.jsx\";\nimport React from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './home.scss';\nimport sha256 from \"crypto-js/sha256\";\nimport CryptoJS from \"crypto-js\";\nimport Logo from './maticlogo.png';\nimport emailjs from \"emailjs-com\";\nconst {\n  Paragraph\n} = _Typography;\n\nclass Campaign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, id) => {\n      this.setState({\n        [id]: e.target.value\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        contract,\n        accounts\n      } = this.props.web3;\n      contract.methods.getFundInfo().call({\n        from: accounts[0],\n        gas: 3000000\n      }).then(result => {\n        this.setState({\n          owner: result.owner,\n          desc: result.description\n        });\n      });\n    };\n\n    this.handleChangeNumber = e => {\n      let value = e.target.value;\n\n      if (!Number(value)) {\n        return;\n      }\n\n      this.setState({\n        value: value\n      });\n    };\n\n    this.toggleSuccess = () => {\n      this.setState({\n        name: '',\n        value: '',\n        success: !this.state.success\n      });\n    };\n\n    this.handleSubmit = () => {\n      // this is called when submit Btn is clicked\n      try {\n        this.setState({\n          loading: true\n        });\n        let uhash = sha256(this.state.name + this.state.value + Date.now());\n        uhash = uhash.toString(CryptoJS.enc.Hex); // contract.methods.donate().send({ from: accounts[0], gas: 3000000, value: this.state.value })\n        // .then(() => {\n        // \tcontract.methods.createToken(\"0x\" + uhash, this.state.value, this.state.name).send({ from: accounts[0] })\n        // \t\t.then((receipt) => {\n        // \t\t\tmessage.success('Donation successful');\n        // \t\t\tconsole.log(receipt)\n        // \t\t\tthis.setState({ success: true, donationkey: \"0x\" + uhash })\n        // \t\t})\n        // \t\t.catch((err) => message.error('Sorry your donation was not successful Please try again'))\n        // })\n\n        const {\n          accounts,\n          contract\n        } = this.props.web3;\n        contract.methods.donate(\"0x\" + uhash, this.state.value, this.state.name).send({\n          from: accounts[0],\n          gas: 3000000,\n          value: this.state.value\n        }).then(receipt => {\n          _message.success('Payment successful');\n\n          console.log(receipt);\n          this.setState({\n            success: true,\n            donationkey: \"0x\" + uhash\n          });\n          this.setState({\n            loading: false\n          });\n        }).catch(err => {\n          _message.error('Sorry your payment was not successful Please try again');\n\n          this.setState({\n            loading: false\n          });\n        });\n      } catch {\n        _message.error('Sorry your payment was not successful Please try again');\n\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      value: '',\n      success: false,\n      donationkey: null,\n      owner: \"\",\n      desc: \"\",\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"campaign-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 4\n      }\n    }, this.state.success ? /*#__PURE__*/React.createElement(_Result, {\n      status: \"success\",\n      title: `We have received your payment with Token key`,\n      visible: this.state.success // subTitle={\"Use this token key to track your donation, Thank you \"}\n      ,\n      extra: /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.toggleSuccess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, \"Go Back\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Paragraph, {\n      copyable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }, this.state.donationkey)) : /*#__PURE__*/React.createElement(_Row, {\n      className: \"campaign\",\n      justify: \"space-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      className: \"campaign-desc-wrapper\",\n      md: 8,\n      sm: 18,\n      xs: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"campaign-desc-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"campaign-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, this.state.desc), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"campaign-desc-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Root Owner\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"campaign-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, this.state.owner)), /*#__PURE__*/React.createElement(_Col, {\n      className: \"donate-form\",\n      md: 6,\n      sm: 18,\n      xs: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"donation-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Payment\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Input, {\n      name: \"name\",\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"Name\"),\n      placeholder: \"Enter your name\",\n      rules: [{\n        required: true,\n        message: 'Please input your Name!',\n        whitespace: true\n      }],\n      onChange: e => this.handleChange(e, 'name'),\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Input, {\n      name: \"value\",\n      addonAfter: /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        style: {\n          height: '20px',\n          width: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 22\n        }\n      }),\n      placeholder: \"Enter Amount in Matic Tokens (Wei)\",\n      onChange: e => this.handleChangeNumber(e),\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), !this.state.loading ? /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Proceed\") : /*#__PURE__*/React.createElement(_Spin, {\n      spinning: this.state.loading,\n      className: \"donation-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n}\n\nexport default Campaign;","map":{"version":3,"sources":["/home/ad3sh/Documents/client/src/components/campaign.jsx"],"names":["React","UserOutlined","LockOutlined","sha256","CryptoJS","Logo","emailjs","Paragraph","Campaign","Component","constructor","props","handleChange","e","id","setState","target","value","componentDidMount","contract","accounts","web3","methods","getFundInfo","call","from","gas","then","result","owner","desc","description","handleChangeNumber","Number","toggleSuccess","name","success","state","handleSubmit","loading","uhash","Date","now","toString","enc","Hex","donate","send","receipt","console","log","donationkey","catch","err","error","bind","render","required","message","whitespace","height","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, Button, AutoComplete, message, Typography, Row, Col } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { InputNumber } from 'antd';\nimport './home.scss';\nimport sha256 from \"crypto-js/sha256\";\nimport CryptoJS from \"crypto-js\";\nimport { Result } from 'antd';\nimport Logo from './maticlogo.png';\nimport emailjs from \"emailjs-com\"\nimport { Spin } from 'antd';\n\nconst { Paragraph } = Typography;\nclass Campaign extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { name: '', value: '', success: false, donationkey: null, owner: \"\", desc: \"\", loading: false };\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\thandleChange = (e, id) => {\n\t\tthis.setState({ [id]: e.target.value });\n\t};\n\tcomponentDidMount = async () => {\n\n\t\tconst { contract, accounts } = this.props.web3;\n\t\tcontract.methods.getFundInfo().call({ from: accounts[0], gas: 3000000 })\n\t\t\t.then((result) => {\n\t\t\t\tthis.setState({ owner: result.owner, desc: result.description })\n\t\t\t})\n\n\t};\n\thandleChangeNumber = e => {\n\t\tlet value = e.target.value;\n\n\t\tif (!Number(value)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\tvalue: value\n\t\t});\n\t}\n\n\ttoggleSuccess = () => {\n\n\t\tthis.setState({ name: '', value: '', success: !this.state.success });\n\t}\n\n\n\thandleSubmit = () => {\n\t\t// this is called when submit Btn is clicked\n\t\ttry {\n\t\t\tthis.setState({ loading: true });\n\t\t\tlet uhash = sha256(this.state.name + this.state.value + Date.now());\n\t\t\tuhash = uhash.toString(CryptoJS.enc.Hex);\n\n\t\t\t// contract.methods.donate().send({ from: accounts[0], gas: 3000000, value: this.state.value })\n\t\t\t// .then(() => {\n\t\t\t// \tcontract.methods.createToken(\"0x\" + uhash, this.state.value, this.state.name).send({ from: accounts[0] })\n\t\t\t// \t\t.then((receipt) => {\n\t\t\t// \t\t\tmessage.success('Donation successful');\n\t\t\t// \t\t\tconsole.log(receipt)\n\t\t\t// \t\t\tthis.setState({ success: true, donationkey: \"0x\" + uhash })\n\t\t\t// \t\t})\n\t\t\t// \t\t.catch((err) => message.error('Sorry your donation was not successful Please try again'))\n\t\t\t// })\n\t\t\tconst { accounts, contract } = this.props.web3;\n\t\t\tcontract.methods.donate(\"0x\" + uhash, this.state.value, this.state.name).send({ from: accounts[0], gas: 3000000, value: this.state.value })\n\t\t\t\t.then((receipt) => {\n\n\t\t\t\t\tmessage.success('Payment successful');\n\t\t\t\t\tconsole.log(receipt)\n\t\t\t\t\tthis.setState({ success: true, donationkey: \"0x\" + uhash })\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tmessage.error('Sorry your payment was not successful Please try again');\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t})\n\t\t}\n\t\tcatch{\n\t\t\tmessage.error('Sorry your payment was not successful Please try again');\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"campaign-wrapper\">\n\t\t\t\t{this.state.success ? (<Result\n\t\t\t\t\tstatus=\"success\"\n\t\t\t\t\ttitle={`We have received your payment with Token key`}\n\t\t\t\t\tvisible={this.state.success}\n\t\t\t\t\t// subTitle={\"Use this token key to track your donation, Thank you \"}\n\t\t\t\t\textra={<Button type=\"primary\" onClick={this.toggleSuccess}>Go Back</Button>}\n\t\t\t\t>\n\t\t\t\t\t<Paragraph copyable>{this.state.donationkey}</Paragraph>\n\t\t\t\t</Result>) :\n\t\t\t\t\t(\n\t\t\t\t\t\t<Row className=\"campaign\" justify=\"space-around\">\n\t\t\t\t\t\t\t<Col className=\"campaign-desc-wrapper\" md={8} sm={18} xs={22}>\n\t\t\t\t\t\t\t\t<p className=\"campaign-desc-title\">Description</p>\n\t\t\t\t\t\t\t\t<p className=\"campaign-desc\">{this.state.desc}</p>\n\t\t\t\t\t\t\t\t<p className=\"campaign-desc-title\">Root Owner</p>\n\t\t\t\t\t\t\t\t<p className=\"campaign-desc\">{this.state.owner}</p>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col className=\"donate-form\" md={6} sm={18} xs={22}>\n\n\t\t\t\t\t\t\t\t<div className=\"donation-title\">Payment</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tlabel={<span>Name</span>}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tmessage: 'Please input your Name!',\n\t\t\t\t\t\t\t\t\t\t\twhitespace: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleChange(e, 'name')}\n\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tname=\"value\"\n\t\t\t\t\t\t\t\t\taddonAfter={<img src={Logo} style={{ height: '20px', width: 'auto' }} />}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Amount in Matic Tokens (Wei)\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleChangeNumber(e)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t(!this.state.loading) ? (\n\t\t\t\t\t\t\t\t\t\t< Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tProceed\n\t\t\t\t\t\t\t\t\t\t</Button>)\n\t\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t\t\t<Spin spinning={this.state.loading} className=\"donation-spin\" />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t)\n\n\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Campaign;\n"]},"metadata":{},"sourceType":"module"}