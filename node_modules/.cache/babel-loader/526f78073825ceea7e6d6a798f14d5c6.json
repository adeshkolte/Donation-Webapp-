{"ast":null,"code":"import _Input from \"antd/es/input\";\nimport _Drawer from \"antd/es/drawer\";\nimport _Space from \"antd/es/space\";\nimport _Divider from \"antd/es/divider\";\nimport _Spin from \"antd/es/spin\";\nimport _Alert from \"antd/es/alert\";\nimport _message from \"antd/es/message\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/home/ad3sh/Documents/Aid Donation/client/src/components/tree.jsx\";\nimport React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { Graph } from \"react-d3-graph\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nconst {\n  Text,\n  Title\n} = _Typography;\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  linkHighlightBehavior: true,\n  directed: true,\n  height: \"650\",\n  width: \"1500\",\n  d3: {\n    gravity: -500 // linkLength: 600,\n\n  },\n  node: {\n    color: \"lightgreen\",\n    size: 400,\n    highlightStrokeColor: \"green\",\n    fontSize: 14\n  },\n  link: {\n    color: \"#001529\",\n    highlightColor: \"lightgreen\",\n    fontSize: 16,\n    renderLabel: true,\n    labelProperty: \"label\"\n  }\n};\nlet tokenkeys;\nlet parentadd;\nlet linkvalue = {};\nlet ownerCompleteInfo = {\n  'root': {\n    'debit': {},\n    'credit': {\n      'value': 0\n    }\n  }\n}; // map owner to his tokens\n\nlet tokensAtAddress = {};\n\nclass RTree extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      linkvalue = {};\n      ownerCompleteInfo = {\n        'root': {\n          'debit': {},\n          'credit': {\n            'value': 0\n          }\n        }\n      }; // map owner to his tokens\n\n      tokensAtAddress = {};\n      const {\n        accounts,\n        contract\n      } = this.props.web3;\n\n      try {\n        let data = this.state.data;\n        contract.methods.getAllTokenKeys().call({\n          from: accounts[0],\n          gas: 3000000\n        }).then(result => {\n          console.log(result);\n          tokenkeys = result;\n        }).then(() => {\n          if (typeof tokenkeys[0] === 'undefined') {} else {\n            let i = 0;\n            let ifnodeexist = {};\n            let promises = [];\n            contract.methods.getSingleTokenDetails(tokenkeys[0]).call({\n              from: accounts[0],\n              gas: 3000000\n            }).then(result => {\n              parentadd = result.CompleteHistoryOfToken[0]._owner;\n            }).then(() => {\n              for (i = 0; i < tokenkeys.length; i++) {\n                let value = tokenkeys[i]; //console.log(ownerCompleteInfo);\n\n                promises.push(new Promise(function (resolve, reject, i) {\n                  contract.methods.getSingleTokenDetails(value).call({\n                    from: accounts[0],\n                    gas: 3000000\n                  }).then(result => {\n                    let temp;\n                    temp = result.CompleteHistoryOfToken;\n                    let j;\n                    console.log(temp);\n\n                    for (j = 0; j < temp.length; j++) {\n                      if (!ifnodeexist.hasOwnProperty(temp[j]._owner) && parentadd != temp[j]._owner) {\n                        ifnodeexist[temp[j]._owner] = true;\n                        data.nodes.push({\n                          id: temp[j].nameOfOwner\n                        });\n                        ownerCompleteInfo[temp[j].nameOfOwner] = {\n                          'credit': {},\n                          'debit': {}\n                        };\n                        if (j != temp.length - 1) ownerCompleteInfo[temp[j + 1].nameOfOwner] = {\n                          'credit': {},\n                          'debit': {}\n                        };\n                      }\n\n                      let flag = 1;\n\n                      if (j < temp.length - 1 && temp[j].nameOfOwner == temp[j + 1].nameOfOwner) {\n                        flag = 0;\n                      }\n\n                      if (temp[j]._owner == parentadd && flag == 1) {\n                        //root owner credit\n                        console.log('sdf');\n                        ownerCompleteInfo['root'].credit.value = parseInt(ownerCompleteInfo['root'].credit.value) + parseInt(temp[j].value);\n                      }\n\n                      if (flag == 1) {\n                        // j owner credit\n                        let name = temp[j].nameOfOwner;\n\n                        if (temp[j]._owner != parentadd) {\n                          //console.log(name);\n                          let t = ownerCompleteInfo[name];\n                          let credit = t['credit']; //let credit = ownerCompleteInfo[temp[j].nameOfOwner]['credit'];\n\n                          if (credit.hasOwnProperty(temp[j].purpose)) {\n                            credit[temp[j].purpose].value = credit[temp[j].purpose].value + parseInt(temp[j].value);\n                            credit[temp[j].purpose].tokens.push(tokenkeys[i]);\n\n                            if (credit[temp[j].purpose].from == \"\") {\n                              if (typeof temp[j - 1] === 'undefined') {\n                                credit[temp[j].purpose].from = \"\";\n                              } else {\n                                credit[temp[j].purpose].from = temp[j - 1].nameOfOwner;\n                              }\n                            }\n                          } else {\n                            if (typeof temp[j - 1] === 'undefined') {\n                              credit[temp[j].purpose] = {\n                                'value': parseInt(temp[j].value),\n                                'from': \"\",\n                                'tokens': [tokenkeys[i]]\n                              };\n                            } else {\n                              credit[temp[j].purpose] = {\n                                'value': parseInt(temp[j].value),\n                                'from': temp[j - 1].nameOfOwner,\n                                'tokens': [tokenkeys[i]]\n                              };\n                            }\n                          }\n\n                          ownerCompleteInfo[name]['credit'] = credit;\n                        }\n                      }\n\n                      if (j < temp.length - 1 && flag == 1) {\n                        //j owner debit\n                        let name = temp[j].nameOfOwner;\n                        if (temp[j]._owner === parentadd) name = 'root';\n                        let t = ownerCompleteInfo[name];\n                        let debit = t['debit'];\n\n                        if (debit.hasOwnProperty(temp[j + 1].purpose)) {\n                          debit[temp[j + 1].purpose].value = debit[temp[j + 1].purpose].value + parseInt(temp[j + 1].value);\n                          debit[temp[j + 1].purpose].tokens.push(tokenkeys[i]);\n                        } else {\n                          debit[temp[j + 1].purpose] = {\n                            'value': parseInt(temp[j + 1].value),\n                            'to': temp[j + 1].nameOfOwner,\n                            'tokens': [tokenkeys[i]]\n                          };\n                        }\n\n                        ownerCompleteInfo[name]['debit'] = debit;\n                      }\n\n                      if (j < temp.length - 1) {\n                        if (temp[j].nameOfOwner != temp[j + 1].nameOfOwner) {\n                          if (temp[j]._owner == parentadd) {\n                            let link = 'root' + temp[j + 1].nameOfOwner;\n\n                            if (linkvalue.hasOwnProperty(link)) {\n                              let prop = linkvalue[link];\n                              linkvalue[link].totalvalue = parseInt(linkvalue[link].totalvalue) + parseInt(temp[j + 1].value);\n                              if (!linkvalue[link].purposes.hasOwnProperty(temp[j + 1].purpose)) linkvalue[link].purposes[temp[j + 1].purpose] = 0;\n                              linkvalue[link].purposes[temp[j + 1].purpose] = parseInt(linkvalue[link].purposes[temp[j + 1].purpose]) + parseInt(temp[j + 1].value);\n                              data.links[prop.index].label = parseInt(data.links[prop.index].label) + parseInt(temp[j + 1].value);\n                            } else {\n                              data.links.push({\n                                source: \"Root\",\n                                target: temp[j + 1].nameOfOwner,\n                                label: parseInt(temp[j + 1].value)\n                              });\n                              linkvalue[link] = {\n                                'index': data.links.length - 1,\n                                'totalvalue': parseInt(temp[j + 1].value),\n                                'purposes': {\n                                  [temp[j + 1].purpose]: parseInt(temp[j + 1].value)\n                                }\n                              };\n                            }\n                          } else if (temp[j + 1]._owner == parentadd) {\n                            let link = temp[j + 1].nameOfOwner + 'root';\n\n                            if (linkvalue.hasOwnProperty(link)) {\n                              let prop = linkvalue[link];\n                              linkvalue[link].totalvalue = parseInt(linkvalue[link].totalvalue) + parseInt(temp[j + 1].value);\n                              if (!linkvalue[link].purposes.hasOwnProperty(temp[j + 1].purpose)) linkvalue[link].purposes[temp[j + 1].purpose] = 0;\n                              linkvalue[link].purposes[temp[j + 1].purpose] = parseInt(linkvalue[link].purposes[temp[j + 1].purpose]) + parseInt(temp[j + 1].value);\n                              data.links[prop.index].label = parseInt(data.links[prop.index].label) + parseInt(temp[j + 1].value);\n                            } else {\n                              data.links.push({\n                                source: temp[j].nameOfOwner,\n                                target: \"Root\",\n                                label: parseInt(temp[j + 1].value)\n                              });\n                              linkvalue[link] = {\n                                'index': data.links.length - 1,\n                                'totalvalue': parseInt(temp[j + 1].value),\n                                'purposes': {\n                                  [temp[j + 1].purpose]: parseInt(temp[j + 1].value)\n                                }\n                              };\n                            }\n                          } else {\n                            let link = temp[j].nameOfOwner + temp[j + 1].nameOfOwner;\n\n                            if (linkvalue.hasOwnProperty(link)) {\n                              let prop = linkvalue[link];\n                              linkvalue[link].totalvalue = parseInt(linkvalue[link].totalvalue) + parseInt(temp[j + 1].value);\n                              if (!linkvalue[link].purposes.hasOwnProperty(temp[j + 1].purpose)) linkvalue[link].purposes[temp[j + 1].purpose] = 0;\n                              linkvalue[link].purposes[temp[j + 1].purpose] = parseInt(linkvalue[link].purposes[temp[j + 1].purpose]) + parseInt(temp[j + 1].value);\n                              data.links[prop.index].label = parseInt(data.links[prop.index].label) + parseInt(temp[j + 1].value);\n                            } else {\n                              data.links.push({\n                                source: temp[j].nameOfOwner,\n                                target: temp[j + 1].nameOfOwner,\n                                label: parseInt(temp[j + 1].value)\n                              });\n                              linkvalue[link] = {\n                                'index': data.links.length - 1,\n                                'totalvalue': parseInt(temp[j + 1].value),\n                                'purposes': {\n                                  [temp[j + 1].purpose]: parseInt(temp[j + 1].value)\n                                }\n                              };\n                            }\n                          } // this.setState({ data: t })\n\n                        }\n\n                        if (!tokensAtAddress.hasOwnProperty(temp[j]._owner)) {\n                          tokensAtAddress[temp[j]._owner] = [];\n                        }\n\n                        tokensAtAddress[temp[j]._owner].push(value);\n                      }\n                    } // this.setState({ 'data': { ...data } })\n\n                  }).then(() => {\n                    //console.log(\"resolved\");\n                    resolve();\n                  });\n                }));\n              }\n\n              Promise.all(promises).then(() => {\n                console.log(\"resolved all\");\n                this.setState({\n                  data: data\n                });\n                console.log(this.state.data);\n                console.log(ownerCompleteInfo);\n                console.log(linkvalue);\n                this.setState({\n                  loadlist: false\n                });\n              });\n            });\n          }\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        _message.error(\"Sorry TX was not successful Please refer console\");\n\n        console.log(error);\n      }\n    };\n\n    this.handleClick = name => {\n      console.log(\"Token name:\", name);\n      this.setState({\n        drawerVisible: true\n      });\n    };\n\n    this.handleToggleDrawer = bool => {\n      this.setState({\n        drawerVisible: bool\n      });\n    };\n\n    this.handleToggleDrawerRoot = bool => {\n      this.setState({\n        drawerVisibleRoot: bool\n      });\n    };\n\n    this.handleToggleDrawerLink = bool => {\n      this.setState({\n        drawerVisibleLink: bool\n      });\n    };\n\n    this.onClickNode = nodeId => {\n      // window.alert(`Clicked node ${nodeId}`);\n      if (nodeId === 'Root') {\n        this.setState({\n          'drawerVisibleRoot': true\n        });\n        this.setState({\n          selectedNode: nodeId\n        }); //credit\n\n        this.setState({\n          totalrecv: ownerCompleteInfo['root'].credit.value\n        });\n        this.setState({\n          tokenArray: tokensAtAddress[parentadd]\n        }); //debit\n\n        let t = ownerCompleteInfo['root'].debit;\n        let tempdebitlist = [];\n        let temptu = 0;\n\n        for (const [key, value] of Object.entries(t)) {\n          tempdebitlist.push({\n            Purpose: key,\n            Funds: value.value,\n            To: value.to\n          });\n          temptu = temptu + parseInt(value.value);\n        }\n\n        this.setState({\n          debitlist: tempdebitlist\n        });\n        this.setState({\n          totalu: temptu\n        });\n        this.setState({\n          totalr: ownerCompleteInfo['root'].debit.value - temptu\n        });\n      } else {\n        this.setState({\n          'drawerVisible': true\n        });\n        this.setState({\n          selectedNode: nodeId\n        });\n        this.setState({\n          drawertype: 'normal'\n        }); //credit\n\n        let t1 = ownerCompleteInfo[nodeId].credit;\n        let tempcreditlist = [];\n        let temptrecv = 0;\n\n        for (const [key, value] of Object.entries(t1)) {\n          tempcreditlist.push({\n            Purpose: key,\n            Funds: value.value,\n            From: value.from\n          });\n          temptrecv = temptrecv + parseInt(value.value);\n        }\n\n        this.setState({\n          creditlist: tempcreditlist\n        });\n        this.setState({\n          totalrecv: temptrecv\n        }); //debit\n\n        let t = ownerCompleteInfo[nodeId].debit;\n        let tempdebitlist = [];\n        let temptu = 0;\n\n        for (const [key, value] of Object.entries(t)) {\n          tempdebitlist.push({\n            Purpose: key,\n            Funds: value.value,\n            To: value.to\n          });\n          temptu = temptu + parseInt(value.value);\n        }\n\n        this.setState({\n          debitlist: tempdebitlist\n        });\n        this.setState({\n          totalu: temptu\n        });\n        this.setState({\n          totalr: temptrecv - temptu\n        });\n      }\n    };\n\n    this.onClickLink = (source, target) => {\n      if (source == 'Root') source = 'root';\n      this.setState({\n        'drawerVisibleLink': true\n      });\n      this.setState({\n        selectedLinkSource: source\n      });\n      this.setState({\n        selectedLinkDestination: target\n      });\n      let t = linkvalue[source + target].purposes;\n      let templinklist = [];\n\n      for (const [key, value] of Object.entries(t)) {\n        templinklist.push({\n          Purpose: key,\n          Funds: value\n        });\n      }\n\n      this.setState({\n        linklist: templinklist\n      });\n      this.setState({\n        totalrecv: linkvalue[source + target].totalvalue\n      });\n    };\n\n    this.handleSearchToken = e => {\n      var name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.state = {\n      drawerVisible: false,\n      tokenArray: [],\n      searchTokenTxt: \"\",\n      data: {\n        nodes: [{\n          id: \"Root\",\n          label: \"value\",\n          renderLabel: true,\n          x: 750,\n          y: 325,\n          size: 500,\n          // only this node will have size 300\n          symbolType: \"diamond\"\n        }],\n        links: []\n      },\n      selectedNode: \"\",\n      debitlist: [],\n      creditlist: [],\n      totalrecv: \"\",\n      totalu: \"\",\n      totalr: \"\",\n      drawerVisibleRoot: false,\n      drawerVisibleLink: false,\n      selectedLinkSource: \"\",\n      selectedLinkDestination: \"\",\n      linklist: [],\n      loadlist: true\n    };\n  }\n\n  render() {\n    if (this.state.loadlist) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Spin, {\n        tip: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Alert, {\n        message: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'center',\n            color: '#000',\n            fontSize: '22px',\n            fontFamily: '\"Open Sans\", sans-serif'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 24\n          }\n        }, \"Loading\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 24\n          }\n        }), \"Tree\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 34\n          }\n        })),\n        description: \"\",\n        type: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tree\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        level: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }\n      }, \"Please click on the node or link to get more details.\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"treeWrapper\",\n        style: {\n          width: \"100%\",\n          height: \"80vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Drawer, {\n        width: 310,\n        className: \"token-drawer-wrapper\",\n        title: this.state.selectedNode,\n        placement: \"right\",\n        closable: true,\n        onClose: () => this.handleToggleDrawer(false),\n        visible: this.state.drawerVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Space, {\n        direction: \"vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(_Divider, {\n        orientation: \"left\",\n        style: {\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }, \"Credit\"), /*#__PURE__*/React.createElement(Text, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 17\n        }\n      }, \"Total Funds Received: \", this.state.totalrecv, \" \"), this.state.creditlist && this.state.creditlist.map(obj => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"token-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 21\n          }\n        }, \"Purpose: \"), obj.Purpose, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 50\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 21\n          }\n        }, \"Funds: \"), obj.Funds, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 46\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 21\n          }\n        }, \"From: \"), obj.From, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 44\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(_Divider, {\n        orientation: \"left\",\n        style: {\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 17\n        }\n      }, \"Debit\"), /*#__PURE__*/React.createElement(Text, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 17\n        }\n      }, \"Utilized Funds: \", this.state.totalu, \" \"), this.state.debitlist && this.state.debitlist.map(obj => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"token-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 21\n          }\n        }, \"Purpose: \"), obj.Purpose, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 50\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 21\n          }\n        }, \"Funds: \"), obj.Funds, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 46\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 21\n          }\n        }, \"To: \"), obj.To, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 40\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(_Drawer, {\n        width: 310,\n        className: \"token-drawer-wrapper\",\n        title: this.state.selectedNode,\n        placement: \"right\",\n        closable: true,\n        onClose: () => this.handleToggleDrawerRoot(false),\n        visible: this.state.drawerVisibleRoot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Space, {\n        direction: \"vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(_Divider, {\n        orientation: \"left\",\n        style: {\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 17\n        }\n      }, \"Credit\"), /*#__PURE__*/React.createElement(Text, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 17\n        }\n      }, \"Total Funds Received: \", this.state.totalrecv, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"token-drawer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        value: this.state.searchTokenTxt,\n        onChange: this.handleSearchToken,\n        name: \"searchTokenTxt\",\n        className: \"search-tree-token\",\n        placeholder: \"Enter token key\",\n        prefix: /*#__PURE__*/React.createElement(SearchOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 19\n        }\n      }), this.state.tokenArray && this.state.tokenArray.map(token => {\n        if (this.state.searchTokenTxt != \"\") {\n          if (token.toLowerCase().includes(this.state.searchTokenTxt)) return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"token-array\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 34\n            }\n          }, token);\n        } else return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"token-array\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 32\n          }\n        }, token);\n      })), /*#__PURE__*/React.createElement(_Divider, {\n        orientation: \"left\",\n        style: {\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }\n      }, \"Debit\"), /*#__PURE__*/React.createElement(Text, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 17\n        }\n      }, \"Utilized Funds: \", this.state.totalu, \" \"), this.state.debitlist && this.state.debitlist.map(obj => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"token-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 21\n          }\n        }, \"Purpose: \"), obj.Purpose, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 50\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 21\n          }\n        }, \"Funds: \"), obj.Funds, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 46\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 21\n          }\n        }, \"To: \"), obj.To, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 40\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(_Drawer, {\n        width: 310,\n        className: \"token-drawer-wrapper\",\n        title: \"Source:\" + \" \" + this.state.selectedLinkSource + \"     \" + \"Target:\" + \" \" + this.state.selectedLinkDestination,\n        placement: \"right\",\n        closable: true,\n        onClose: () => this.handleToggleDrawerLink(false),\n        visible: this.state.drawerVisibleLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Space, {\n        direction: \"vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }\n      }, \"Total Transfered: \", this.state.totalrecv, \" \"), this.state.linklist && this.state.linklist.map(obj => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"token-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 21\n          }\n        }, \"Purpose: \"), obj.Purpose, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 50\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 21\n          }\n        }, \"Funds: \"), obj.Funds, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 46\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Graph, {\n        id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        ,\n        data: this.state.data,\n        config: myConfig,\n        onClickNode: this.onClickNode,\n        onClickLink: this.onClickLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default RTree;","map":{"version":3,"sources":["/home/ad3sh/Documents/Aid Donation/client/src/components/tree.jsx"],"names":["React","Tree","SearchOutlined","Graph","CytoscapeComponent","Text","Title","myConfig","nodeHighlightBehavior","linkHighlightBehavior","directed","height","width","d3","gravity","node","color","size","highlightStrokeColor","fontSize","link","highlightColor","renderLabel","labelProperty","tokenkeys","parentadd","linkvalue","ownerCompleteInfo","tokensAtAddress","RTree","Component","constructor","props","componentDidMount","accounts","contract","web3","data","state","methods","getAllTokenKeys","call","from","gas","then","result","console","log","i","ifnodeexist","promises","getSingleTokenDetails","CompleteHistoryOfToken","_owner","length","value","push","Promise","resolve","reject","temp","j","hasOwnProperty","nodes","id","nameOfOwner","flag","credit","parseInt","name","t","purpose","tokens","debit","prop","totalvalue","purposes","links","index","label","source","target","all","setState","loadlist","error","handleClick","drawerVisible","handleToggleDrawer","bool","handleToggleDrawerRoot","drawerVisibleRoot","handleToggleDrawerLink","drawerVisibleLink","onClickNode","nodeId","selectedNode","totalrecv","tokenArray","tempdebitlist","temptu","key","Object","entries","Purpose","Funds","To","to","debitlist","totalu","totalr","drawertype","t1","tempcreditlist","temptrecv","From","creditlist","onClickLink","selectedLinkSource","selectedLinkDestination","templinklist","linklist","handleSearchToken","e","searchTokenTxt","x","y","symbolType","render","textAlign","fontFamily","map","obj","token","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport { Drawer, Input } from \"antd\";\nimport { Card } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { message } from \"antd\";\nimport { Graph } from \"react-d3-graph\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport { Typography, Space } from 'antd';\nimport { List, Divider } from 'antd';\nimport { Spin, Alert } from 'antd';\nconst { Text, Title } = Typography;\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  linkHighlightBehavior: true,\n  directed: true,\n  height: \"650\",\n  width: \"1500\",\n  d3: {\n    gravity: -500,\n    // linkLength: 600,\n  },\n\n  node: {\n    color: \"lightgreen\",\n    size: 400,\n    highlightStrokeColor: \"green\",\n    fontSize: 14,\n\n  },\n  link: {\n    color: \"#001529\",\n    highlightColor: \"lightgreen\",\n    fontSize: 16,\n    renderLabel: true,\n    labelProperty: \"label\",\n  },\n};\nlet tokenkeys;\nlet parentadd;\nlet linkvalue = {}\nlet ownerCompleteInfo = { 'root': { 'debit': {}, 'credit': { 'value': 0 } } };\n// map owner to his tokens\nlet tokensAtAddress = {};\n\nclass RTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerVisible: false,\n      tokenArray: [],\n      searchTokenTxt: \"\",\n      data: {\n        nodes: [\n          {\n            id: \"Root\",\n            label: \"value\",\n            renderLabel: true,\n            x: 750,\n            y: 325,\n            size: 500, // only this node will have size 300\n            symbolType: \"diamond\",\n          },\n        ],\n        links: [],\n      },\n      selectedNode: \"\",\n      debitlist: [],\n      creditlist: [],\n      totalrecv: \"\",\n      totalu: \"\",\n      totalr: \"\",\n      drawerVisibleRoot: false,\n      drawerVisibleLink: false,\n      selectedLinkSource: \"\",\n      selectedLinkDestination: \"\",\n      linklist: [],\n      loadlist: true,\n    };\n  }\n\n  componentDidMount = async () => {\n    linkvalue = {}\n    ownerCompleteInfo = { 'root': { 'debit': {}, 'credit': { 'value': 0 } } };\n    // map owner to his tokens\n    tokensAtAddress = {};\n    const { accounts, contract } = this.props.web3;\n\n\n\n    try {\n      let data = this.state.data;\n      contract.methods\n        .getAllTokenKeys()\n        .call({ from: accounts[0], gas: 3000000 })\n        .then((result) => {\n          console.log(result);\n          tokenkeys = result;\n\n        })\n        .then(() => {\n          if (typeof tokenkeys[0] === 'undefined') {\n\n          }\n          else {\n            let i = 0;\n            let ifnodeexist = {};\n            let promises = [];\n\n            contract.methods\n              .getSingleTokenDetails(tokenkeys[0])\n              .call({ from: accounts[0], gas: 3000000 })\n              .then((result) => {\n                parentadd = result.CompleteHistoryOfToken[0]._owner;\n              }).then(() => {\n                for (i = 0; i < tokenkeys.length; i++) {\n                  let value = tokenkeys[i];\n                  //console.log(ownerCompleteInfo);\n                  promises.push(\n                    new Promise(function (resolve, reject, i) {\n\n\n                      contract.methods\n                        .getSingleTokenDetails(value)\n                        .call({ from: accounts[0], gas: 3000000 })\n                        .then((result) => {\n                          let temp;\n                          temp = result.CompleteHistoryOfToken;\n                          let j;\n                          console.log(temp);\n\n                          for (j = 0; j < temp.length; j++) {\n                            if (\n                              !ifnodeexist.hasOwnProperty(temp[j]._owner) &&\n                              parentadd != temp[j]._owner\n                            ) {\n                              ifnodeexist[temp[j]._owner] = true;\n                              data.nodes.push({ id: temp[j].nameOfOwner });\n                              ownerCompleteInfo[temp[j].nameOfOwner] = {\n\n                                'credit': {},\n                                'debit': {}\n                              }\n                              if (j != temp.length - 1) ownerCompleteInfo[temp[j + 1].nameOfOwner] = {\n                                'credit': {},\n                                'debit': {}\n                              }\n                            }\n                            let flag = 1;\n                            if (j < temp.length - 1 && temp[j].nameOfOwner == temp[j + 1].nameOfOwner) {\n                              flag = 0;\n                            }\n                            if (temp[j]._owner == parentadd && flag == 1) {\n                              //root owner credit\n                              console.log('sdf');\n                              ownerCompleteInfo['root'].credit.value = parseInt(ownerCompleteInfo['root'].credit.value) + parseInt(temp[j].value);\n                            }\n                            if (flag == 1) {\n                              // j owner credit\n                              let name = temp[j].nameOfOwner;\n                              if (temp[j]._owner != parentadd) {\n\n                                //console.log(name);\n                                let t = ownerCompleteInfo[name];\n                                let credit = t['credit'];\n                                //let credit = ownerCompleteInfo[temp[j].nameOfOwner]['credit'];\n                                if (credit.hasOwnProperty(temp[j].purpose)) {\n                                  credit[temp[j].purpose].value = credit[temp[j].purpose].value + parseInt(temp[j].value);\n                                  credit[temp[j].purpose].tokens.push(tokenkeys[i]);\n                                  if (credit[temp[j].purpose].from == \"\") {\n                                    if (typeof temp[j - 1] === 'undefined') {\n                                      credit[temp[j].purpose].from = \"\"\n                                    }\n                                    else {\n                                      credit[temp[j].purpose].from = temp[j - 1].nameOfOwner;\n\n                                    }\n                                  }\n                                }\n                                else {\n                                  if (typeof temp[j - 1] === 'undefined') {\n                                    credit[temp[j].purpose] = { 'value': parseInt(temp[j].value), 'from': \"\", 'tokens': [tokenkeys[i]] }\n                                  }\n                                  else {\n                                    credit[temp[j].purpose] = { 'value': parseInt(temp[j].value), 'from': temp[j - 1].nameOfOwner, 'tokens': [tokenkeys[i]] }\n\n                                  }\n\n                                }\n                                ownerCompleteInfo[name]['credit'] = credit;\n                              }\n                            }\n\n                            if (j < temp.length - 1 && flag == 1) {\n                              //j owner debit\n                              let name = temp[j].nameOfOwner;\n                              if (temp[j]._owner === parentadd) name = 'root'\n\n                              let t = ownerCompleteInfo[name];\n                              let debit = t['debit'];\n                              if (debit.hasOwnProperty(temp[j + 1].purpose)) {\n                                debit[temp[j + 1].purpose].value = debit[temp[j + 1].purpose].value + parseInt(temp[j + 1].value);\n                                debit[temp[j + 1].purpose].tokens.push(tokenkeys[i]);\n                              }\n                              else {\n                                debit[temp[j + 1].purpose] = { 'value': parseInt(temp[j + 1].value), 'to': temp[j + 1].nameOfOwner, 'tokens': [tokenkeys[i]] }\n                              }\n                              ownerCompleteInfo[name]['debit'] = debit;\n                            }\n\n                            if (j < temp.length - 1) {\n                              if (temp[j].nameOfOwner != temp[j + 1].nameOfOwner) {\n\n\n                                if (temp[j]._owner == parentadd) {\n                                  let link = 'root' + temp[j + 1].nameOfOwner;\n                                  if (linkvalue.hasOwnProperty(link)) {\n                                    let prop = linkvalue[link]\n                                    linkvalue[link].totalvalue = parseInt(linkvalue[link].totalvalue) + parseInt(temp[j + 1].value);\n                                    if (!linkvalue[link].purposes.hasOwnProperty(temp[j + 1].purpose)) linkvalue[link].purposes[temp[j + 1].purpose] = 0;\n                                    linkvalue[link].purposes[temp[j + 1].purpose] = parseInt(linkvalue[link].purposes[temp[j + 1].purpose]) + parseInt(temp[j + 1].value);\n                                    data.links[prop.index].label = parseInt(data.links[prop.index].label) + parseInt(temp[j + 1].value)\n\n                                  }\n                                  else {\n\n                                    data.links.push({\n                                      source: \"Root\",\n                                      target: temp[j + 1].nameOfOwner,\n                                      label: parseInt(temp[j + 1].value),\n                                    });\n                                    linkvalue[link] = {\n\n                                      'index': data.links.length - 1,\n                                      'totalvalue': parseInt(temp[j + 1].value),\n                                      'purposes': {\n                                        [temp[j + 1].purpose]: parseInt(temp[j + 1].value)\n                                      }\n\n                                    }\n                                  }\n\n                                } else if (temp[j + 1]._owner == parentadd) {\n                                  let link = temp[j + 1].nameOfOwner + 'root';\n\n                                  if (linkvalue.hasOwnProperty(link)) {\n\n                                    let prop = linkvalue[link]\n                                    linkvalue[link].totalvalue = parseInt(linkvalue[link].totalvalue) + parseInt(temp[j + 1].value);\n                                    if (!linkvalue[link].purposes.hasOwnProperty(temp[j + 1].purpose)) linkvalue[link].purposes[temp[j + 1].purpose] = 0;\n                                    linkvalue[link].purposes[temp[j + 1].purpose] = parseInt(linkvalue[link].purposes[temp[j + 1].purpose]) + parseInt(temp[j + 1].value);\n                                    data.links[prop.index].label = parseInt(data.links[prop.index].label) + parseInt(temp[j + 1].value)\n                                  }\n                                  else {\n\n                                    data.links.push({\n                                      source: temp[j].nameOfOwner,\n                                      target: \"Root\",\n                                      label: parseInt(temp[j + 1].value),\n                                    });\n                                    linkvalue[link] = {\n\n                                      'index': data.links.length - 1,\n                                      'totalvalue': parseInt(temp[j + 1].value),\n                                      'purposes': {\n                                        [temp[j + 1].purpose]: parseInt(temp[j + 1].value)\n                                      }\n\n                                    }\n                                  }\n\n                                } else {\n                                  let link = temp[j].nameOfOwner + temp[j + 1].nameOfOwner;\n                                  if (linkvalue.hasOwnProperty(link)) {\n\n                                    let prop = linkvalue[link]\n                                    linkvalue[link].totalvalue = parseInt(linkvalue[link].totalvalue) + parseInt(temp[j + 1].value);\n                                    if (!linkvalue[link].purposes.hasOwnProperty(temp[j + 1].purpose)) linkvalue[link].purposes[temp[j + 1].purpose] = 0;\n                                    linkvalue[link].purposes[temp[j + 1].purpose] = parseInt(linkvalue[link].purposes[temp[j + 1].purpose]) + parseInt(temp[j + 1].value);\n                                    data.links[prop.index].label = parseInt(data.links[prop.index].label) + parseInt(temp[j + 1].value);\n                                  }\n                                  else {\n\n                                    data.links.push({\n                                      source: temp[j].nameOfOwner,\n                                      target: temp[j + 1].nameOfOwner,\n                                      label: parseInt(temp[j + 1].value)\n                                    });\n                                    linkvalue[link] = {\n\n                                      'index': data.links.length - 1,\n                                      'totalvalue': parseInt(temp[j + 1].value),\n                                      'purposes': {\n                                        [temp[j + 1].purpose]: parseInt(temp[j + 1].value)\n                                      }\n                                    }\n                                  }\n\n                                }\n\n                                // this.setState({ data: t })\n                              }\n                              if (!tokensAtAddress.hasOwnProperty(temp[j]._owner)) {\n                                tokensAtAddress[temp[j]._owner] = [];\n                              }\n                              tokensAtAddress[temp[j]._owner].push(value);\n                            }\n                          }\n\n                          // this.setState({ 'data': { ...data } })\n                        })\n                        .then(() => {\n                          //console.log(\"resolved\");\n                          resolve();\n                        })\n                    })\n                  );\n                }\n\n                Promise.all(promises).then(() => {\n                  console.log(\"resolved all\");\n                  this.setState({ data: data });\n                  console.log(this.state.data);\n                  console.log(ownerCompleteInfo);\n                  console.log(linkvalue);\n                  this.setState({ loadlist: false })\n                });\n              });\n          }\n        })\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      message.error(\"Sorry TX was not successful Please refer console\");\n      console.log(error);\n    }\n\n\n  };\n  // data = {\n  //   nodes:\n  //     [\n  //       { id: \"Root\", label: \"value\", renderLabel: true, x: 750, y: 325 },\n  //       { id: \"Auth 1\" },\n  //       { id: \"acc 7\" },\n  //       { id: \"Auth 2\" },\n  //     ],\n  //   links:\n  //     [\n  //       { source: \"Root\", target: \"Auth 1\", label: 5 },\n  //       { source: \"Auth 1\", target: \"acc 7\", label: 5 },\n  //       { source: \"Root\", target: \"Auth 2\", label: 5 },\n  //     ]\n  // }\n\n  handleClick = (name) => {\n    console.log(\"Token name:\", name);\n    this.setState({ drawerVisible: true });\n  };\n  handleToggleDrawer = (bool) => {\n    this.setState({ drawerVisible: bool });\n  };\n  handleToggleDrawerRoot = (bool) => {\n    this.setState({ drawerVisibleRoot: bool });\n  };\n  handleToggleDrawerLink = (bool) => {\n    this.setState({ drawerVisibleLink: bool });\n  };\n  onClickNode = (nodeId) => {\n    // window.alert(`Clicked node ${nodeId}`);\n\n    if (nodeId === 'Root') {\n      this.setState({ 'drawerVisibleRoot': true });\n      this.setState({ selectedNode: nodeId })\n\n      //credit\n      this.setState({ totalrecv: ownerCompleteInfo['root'].credit.value });\n      this.setState({ tokenArray: tokensAtAddress[parentadd] })\n      //debit\n      let t = ownerCompleteInfo['root'].debit;\n      let tempdebitlist = [];\n      let temptu = 0;\n      for (const [key, value] of Object.entries(t)) {\n        tempdebitlist.push({ Purpose: key, Funds: value.value, To: value.to });\n        temptu = temptu + parseInt(value.value);\n      }\n      this.setState({ debitlist: tempdebitlist });\n      this.setState({ totalu: temptu });\n      this.setState({ totalr: ownerCompleteInfo['root'].debit.value - temptu });\n    }\n    else {\n\n      this.setState({ 'drawerVisible': true });\n      this.setState({ selectedNode: nodeId })\n      this.setState({ drawertype: 'normal' });\n      //credit\n      let t1 = ownerCompleteInfo[nodeId].credit;\n      let tempcreditlist = [];\n      let temptrecv = 0;\n      for (const [key, value] of Object.entries(t1)) {\n        tempcreditlist.push({ Purpose: key, Funds: value.value, From: value.from });\n        temptrecv = temptrecv + parseInt(value.value);\n      }\n      this.setState({ creditlist: tempcreditlist });\n      this.setState({ totalrecv: temptrecv });\n\n\n\n      //debit\n      let t = ownerCompleteInfo[nodeId].debit;\n      let tempdebitlist = [];\n      let temptu = 0;\n      for (const [key, value] of Object.entries(t)) {\n        tempdebitlist.push({ Purpose: key, Funds: value.value, To: value.to });\n        temptu = temptu + parseInt(value.value);\n      }\n      this.setState({ debitlist: tempdebitlist });\n      this.setState({ totalu: temptu });\n      this.setState({ totalr: temptrecv - temptu });\n    }\n\n\n  };\n\n  onClickLink = (source, target) => {\n\n    if (source == 'Root') source = 'root';\n    this.setState({ 'drawerVisibleLink': true });\n    this.setState({ selectedLinkSource: source })\n    this.setState({ selectedLinkDestination: target })\n    let t = linkvalue[source + target].purposes\n    let templinklist = [];\n    for (const [key, value] of Object.entries(t)) {\n      templinklist.push({ Purpose: key, Funds: value })\n    }\n    this.setState({ linklist: templinklist });\n    this.setState({ totalrecv: linkvalue[source + target].totalvalue })\n  };\n\n  handleSearchToken = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  };\n  render() {\n\n    if (this.state.loadlist) {\n      return (\n        <div className=\"loading\">\n          <Spin tip=\"\">\n            <Alert\n              message={<div style={{ textAlign: 'center', color: '#000', fontSize: '22px', fontFamily: '\"Open Sans\", sans-serif' }}>\n                Loading<br />Tree<br />\n              </div>\n              }\n              description=\"\"\n              type=\"info\"\n            />\n          </Spin>\n        </div>\n      )\n    }\n    else {\n      return (\n\n        <div className=\"tree\">\n          <Title level={4}>Please click on the node or link to get more details.</Title>\n          <div id=\"treeWrapper\" style={{ width: \"100%\", height: \"80vh\" }}>\n\n\n            {/* Normal drawer */}\n\n            <Drawer\n              width={310}\n              className=\"token-drawer-wrapper\"\n              title={this.state.selectedNode}\n              placement=\"right\"\n              closable={true}\n              onClose={() => this.handleToggleDrawer(false)}\n              visible={this.state.drawerVisible}\n            >\n              <Space direction=\"vertical\">\n\n                {/* <Title level={3}></Title> */}\n                <Divider orientation=\"left\" style={{ fontSize: '20px' }}>Credit</Divider>\n                <Text style={{ fontSize: '18px' }}>Total Funds Received: {this.state.totalrecv} </Text>\n                {this.state.creditlist && this.state.creditlist.map((obj) => {\n                  return <div className=\"token-card\">\n                    <b>Purpose: </b>{obj.Purpose}<br />\n                    <b>Funds: </b>{obj.Funds}<br />\n                    <b>From: </b>{obj.From}<br />\n                  </div>\n                })}\n\n\n                <Divider orientation=\"left\" style={{ fontSize: '20px' }}>Debit</Divider>\n                <Text style={{ fontSize: '18px' }}>Utilized Funds: {this.state.totalu} </Text>\n                {this.state.debitlist && this.state.debitlist.map((obj) => {\n                  return <div className=\"token-card\">\n                    <b>Purpose: </b>{obj.Purpose}<br />\n                    <b>Funds: </b>{obj.Funds}<br />\n                    <b>To: </b>{obj.To}<br />\n                  </div>\n                })}\n\n                {/* <Text mark>Remaining Funds: {this.state.totalr}</Text> */}\n\n\n              </Space>\n\n            </Drawer>\n\n\n            {/* Root drawer */}\n\n            <Drawer\n              width={310}\n              className=\"token-drawer-wrapper\"\n              title={this.state.selectedNode}\n              placement=\"right\"\n              closable={true}\n              onClose={() => this.handleToggleDrawerRoot(false)}\n              visible={this.state.drawerVisibleRoot}\n            >\n              <Space direction=\"vertical\">\n\n                {/* <Title level={3}></Title> */}\n                <Divider orientation=\"left\" style={{ fontSize: '20px' }}>Credit</Divider>\n\n                <Text style={{ fontSize: '18px' }}>Total Funds Received: {this.state.totalrecv} </Text>\n                <div className=\"token-drawer\">\n                  <Input\n                    value={this.state.searchTokenTxt}\n                    onChange={this.handleSearchToken}\n                    name=\"searchTokenTxt\"\n                    className=\"search-tree-token\"\n                    placeholder=\"Enter token key\"\n                    prefix={<SearchOutlined />}\n                  />\n\n                  {this.state.tokenArray &&\n                    this.state.tokenArray.map((token) => {\n                      if (this.state.searchTokenTxt != \"\") {\n                        if (token.toLowerCase().includes(this.state.searchTokenTxt))\n                          return <div className=\"token-array\">{token}</div>\n                      }\n                      else\n                        return <div className=\"token-array\">{token}</div>\n                    })}\n                </div>\n                <Divider orientation=\"left\" style={{ fontSize: '20px' }}>Debit</Divider>\n                <Text style={{ fontSize: '18px' }}>Utilized Funds: {this.state.totalu} </Text>\n                {this.state.debitlist && this.state.debitlist.map((obj) => {\n                  return <div className=\"token-card\">\n                    <b>Purpose: </b>{obj.Purpose}<br />\n                    <b>Funds: </b>{obj.Funds}<br />\n                    <b>To: </b>{obj.To}<br />\n                  </div>\n                })}\n\n                {/* <Text mark>Remaining Funds: {this.state.totalr}</Text> */}\n\n\n              </Space>\n\n            </Drawer>\n\n\n            {/* Link drawer */}\n\n            <Drawer\n              width={310}\n              className=\"token-drawer-wrapper\"\n              title={\"Source:\" + \" \" + this.state.selectedLinkSource + \"     \" + \"Target:\" + \" \" + this.state.selectedLinkDestination}\n              placement=\"right\"\n              closable={true}\n              onClose={() => this.handleToggleDrawerLink(false)}\n              visible={this.state.drawerVisibleLink}\n            >\n              <Space direction=\"vertical\">\n                <Text style={{ fontSize: '18px' }}>Total Transfered: {this.state.totalrecv} </Text>\n                {this.state.linklist && this.state.linklist.map((obj) => {\n                  return <div className=\"token-card\">\n                    <b>Purpose: </b>{obj.Purpose}<br />\n                    <b>Funds: </b>{obj.Funds}<br />\n                  </div>\n                })}\n              </Space>\n\n            </Drawer>\n            <Graph\n              id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n              data={this.state.data}\n              config={myConfig}\n              onClickNode={this.onClickNode}\n              onClickLink={this.onClickLink}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default RTree;"]},"metadata":{},"sourceType":"module"}