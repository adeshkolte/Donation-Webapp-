{"ast":null,"code":"import _Row from \"antd/es/row\";\nimport _Col from \"antd/es/col\";\nimport _Button from \"antd/es/button\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _Input from \"antd/es/input\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/ad3sh/Documents/Aid Donation/client/src/components/register.jsx\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 20\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 10\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst RegistrationForm = () => {\n  const [form] = _Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/React.createElement(_Row, {\n    className: \"register-wrapper\",\n    justify: \"space-around\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    sm: 22,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form, Object.assign({}, formItemLayout, {\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"username\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"Username\\xA0\", /*#__PURE__*/React.createElement(_Tooltip, {\n      title: \"What do you want others to call you?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }))),\n    rules: [{\n      required: true,\n      message: 'Please input your username!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"confirm\",\n    label: \"Confirm Password\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('The two passwords that you entered do not match!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"upi\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 32\n      }\n    }, \"Upi\"),\n    rules: [{\n      required: true,\n      message: 'Please input your Upi id!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"maticAddress\",\n    label: \"Matic Address\",\n    rules: [{\n      required: true,\n      message: 'Please input your Matic address!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"I have read the \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 45\n    }\n  }, \"agreement\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Register\")))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/home/ad3sh/Documents/Aid Donation/client/src/components/register.jsx"],"names":["React","useState","ReactDOM","QuestionCircleOutlined","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","form","useForm","onFinish","values","console","log","required","message","whitespace","type","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Checkbox,\n    Button,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 20,\n        },\n        sm: {\n            span: 6,\n        },\n    },\n    wrapperCol: {\n        xs: {\n            span: 10,\n        },\n        sm: {\n            span: 16,\n        },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst RegistrationForm = () => {\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <Row className=\"register-wrapper\" justify=\"space-around\" align=\"middle\">\n            <Col xs={24} sm={22} md={12}>\n                <Form\n                    {...formItemLayout}\n                    form={form}\n                    name=\"register\"\n                    onFinish={onFinish}\n                    scrollToFirstError\n                >\n                    <Form.Item\n                        name=\"username\"\n                        label={\n                            <span>\n                                Username&nbsp;\n                    <Tooltip title=\"What do you want others to call you?\">\n                                    <QuestionCircleOutlined />\n                                </Tooltip>\n                            </span>\n                        }\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"email\"\n                        label=\"E-mail\"\n                        rules={[\n                            {\n                                type: 'email',\n                                message: 'The input is not valid E-mail!',\n                            },\n                            {\n                                required: true,\n                                message: 'Please input your E-mail!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                        hasFeedback\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"Confirm Password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(\n                                        'The two passwords that you entered do not match!'\n                                    );\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"upi\"\n                        label={<span>Upi</span>}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Upi id!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"maticAddress\"\n                        label=\"Matic Address\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Matic address!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item>\n                        <Checkbox>\n                            I have read the <a href=\"\">agreement</a>\n                        </Checkbox>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Register\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Col>\n        </Row>\n    );\n};\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}