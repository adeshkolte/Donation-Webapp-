{"ast":null,"code":"import _Button from \"antd/es/button\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/ad3sh/Documents/client/src/components/authority.jsx\";\nimport React from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './home.scss';\nimport memoize from \"memoize-one\";\nconst labels = [];\nconst mapAuthNametoAddress = {};\n\nclass Authority extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, name) => {\n      this.setState({\n        [name]: e\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        accounts,\n        contract\n      } = this.props.web3;\n\n      try {\n        this.filter(this.props.web3.accounts);\n        contract.methods.getAllListedAuthAddress().call({\n          from: accounts[0],\n          gas: 3000000\n        }).then(result => {\n          let i;\n          console.log(result);\n\n          for (i = 0; i < result.length; i++) {\n            let temp = result[i];\n            contract.methods.getSingleAuthDetails(temp).call({\n              from: accounts[0],\n              gas: 3000000\n            }).then(result => {\n              labels.push({\n                'value': result['name']\n              });\n              mapAuthNametoAddress[result['name']] = temp;\n            });\n          }\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        _message.error('Sorry TX was not successful Please refer console');\n\n        console.log('sad');\n        console.error(error);\n      }\n    };\n\n    this.filter = memoize(accounts => {\n      this.setState({\n        accounts: accounts\n      });\n    });\n\n    this.handleSubmit = () => {\n      // const { accounts, contract } = this.props.web3;\n      // // this is called when submit Btn is clicked\n      console.log(this.state.accounts[0]);\n      console.log(this.state.accounts);\n      console.log(mapAuthNametoAddress['Root']);\n      console.log(this.state.accounts[0] == mapAuthNametoAddress['Root']);\n\n      if (this.state.accounts[0] == mapAuthNametoAddress['Root']) {\n        // console.log(this.state.accounts);\n        // console.log(mapAuthNametoAddress['Root']);\n        this.props.handleChangeMenu('5');\n      } else {\n        console.log(this.state.accounts);\n        console.log(mapAuthNametoAddress['Root']);\n        console.log(this.state.accounts[0] == mapAuthNametoAddress['Root']);\n        this.props.handleChangeMenu('6');\n      }\n    };\n\n    this.state = {\n      selectedauthority: '',\n      accounts: [],\n      show: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"authority-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"authority\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Please note that you will not be able to call dedicated functions of authorities unless your wallet address is registered authority address.\", /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      size: \"large\",\n      onClick: this.handleSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default Authority;","map":{"version":3,"sources":["/home/ad3sh/Documents/client/src/components/authority.jsx"],"names":["React","UserOutlined","LockOutlined","memoize","labels","mapAuthNametoAddress","Authority","Component","constructor","props","handleChange","e","name","setState","componentDidMount","accounts","contract","web3","filter","methods","getAllListedAuthAddress","call","from","gas","then","result","i","console","log","length","temp","getSingleAuthDetails","push","error","handleSubmit","state","handleChangeMenu","selectedauthority","show","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, Button, AutoComplete, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './home.scss';\nimport memoize from \"memoize-one\";\n\nconst labels = [\n\n]\n\nconst mapAuthNametoAddress = {}\nclass Authority extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { selectedauthority: '', accounts: [], show: false };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange = (e, name) => {\n\n        this.setState({ [name]: e });\n\n    }\n    // labels.push({ 'value': result[i] })\n    componentDidMount = async () => {\n        const { accounts, contract } = this.props.web3;\n        try {\n            this.filter(this.props.web3.accounts);\n            contract.methods.getAllListedAuthAddress().call({ from: accounts[0], gas: 3000000 })\n                .then((result) => {\n\n                    let i;\n                    console.log(result);\n                    for (i = 0; i < result.length; i++) {\n                        let temp = result[i];\n                        contract.methods.getSingleAuthDetails(temp).call({ from: accounts[0], gas: 3000000 })\n                            .then((result) => {\n                                labels.push({ 'value': result['name'] })\n                                mapAuthNametoAddress[result['name']] = temp;\n                            })\n\n                    }\n\n                })\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            message.error('Sorry TX was not successful Please refer console')\n            console.log('sad');\n            console.error(error);\n        }\n    };\n\n    filter = memoize(\n        (accounts) => { this.setState({ accounts: accounts }) }\n    );\n\n    handleSubmit = () => {\n\n        // const { accounts, contract } = this.props.web3;\n\n        // // this is called when submit Btn is clicked\n        console.log(this.state.accounts[0]);\n        console.log(this.state.accounts);\n        console.log(mapAuthNametoAddress['Root']);\n        console.log(this.state.accounts[0] == mapAuthNametoAddress['Root']);\n        if (this.state.accounts[0] == mapAuthNametoAddress['Root']) {\n\n            // console.log(this.state.accounts);\n            // console.log(mapAuthNametoAddress['Root']);\n            this.props.handleChangeMenu('5');\n        }\n        else {\n\n            console.log(this.state.accounts);\n            console.log(mapAuthNametoAddress['Root']);\n            console.log(this.state.accounts[0] == mapAuthNametoAddress['Root']);\n            this.props.handleChangeMenu('6');\n        }\n\n    }\n    render() {\n        return (\n            <div className=\"authority-wrapper\">\n                <div className=\"authority\">\n                    Please note that you will not be able to call dedicated functions of authorities unless your wallet address is registered authority address.\n                    {/* <div className=\"authority-title\">Enter your name</div><br /> */}\n                    {/* <AutoComplete\n                        size=\"large\"\n                        style={{\n                            width: '100%',\n                        }}\n                        options={labels}\n                        placeholder=\"Name\"\n                        prefix={<UserOutlined />}\n                        filterOption={(inputValue, option) =>\n                            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                        }\n                        value={this.state.selectedauthority}\n                        onChange={(e) => this.handleChange(e, 'selectedauthority')}\n                        name=\"username\" /><br /><br /> */}\n                    <Button type=\"primary\" size=\"large\" onClick={this.handleSubmit} block>SUBMIT</Button>\n                    {/* <Button type=\"link\" onClick={() => this.props.handleChangeMenu('5')}>Don't have account? Register</Button> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Authority;"]},"metadata":{},"sourceType":"module"}