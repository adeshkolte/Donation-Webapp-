{"ast":null,"code":"import _Modal from \"antd/es/modal\";\nimport _Space from \"antd/es/space\";\nimport _Spin from \"antd/es/spin\";\nimport _Alert from \"antd/es/alert\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/home/ad3sh/Documents/Aid Donation/client/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { Router, Route } from \"react-router-dom\";\nimport Home from './components/home';\nimport 'antd/dist/antd.css';\nimport history from \"./history\";\n//blockchain imports\nimport FactoryPaardarshak from \"./contracts/factorypaardarshak.json\";\nimport Paardarshak from \"./contracts/paardarshak.json\";\nimport getWeb3 from \"./getWeb3\";\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nconst {\n  Paragraph\n} = _Typography;\nconst {\n  Text,\n  Link\n} = _Typography;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      parentContract: null,\n      contract: null,\n      showmodal: false\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        let accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = FactoryPaardarshak.networks[networkId];\n\n        if (typeof deployedNetwork === 'undefined') {\n          this.setState({\n            showmodal: true\n          });\n        }\n\n        const instance = new web3.eth.Contract(FactoryPaardarshak.abi, deployedNetwork && deployedNetwork.address);\n        console.log(instance);\n        this.setState({\n          web3,\n          accounts,\n          parentContract: instance\n        }); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        window.ethereum.on('accountsChanged', acc => {\n          this.setState({\n            accounts: acc\n          });\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Spin, {\n        tip: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Alert, {\n        message: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'center',\n            color: '#000',\n            fontSize: '22px',\n            fontFamily: '\"Open Sans\", sans-serif'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 24\n          }\n        }, \"Loading\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 24\n          }\n        }), \"Web3, Accounts, and Contract... \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 62\n          }\n        })),\n        description: \"\",\n        type: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    if (!this.state.showmodal) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        history: history,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Home, {\n        web3: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, this.error, /*#__PURE__*/React.createElement(_Modal, {\n      title: /*#__PURE__*/React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 18\n        }\n      }, \"Incorrect Network\"),\n      style: {\n        top: 20\n      },\n      visible: this.state.showmodal,\n      footer: [// <Button key=\"Go to Faucet\" onClick={this.handleCancel}>\n        //   Return\n        // </Button>,\n        // <Button key=\"GettinMatic\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n        //   Submit\n        // </Button>,\n      ],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Space, {\n      direction: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Please Select Matic TestnetV3 as your network in wallet provider. \")), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \" If you dont have Matic TestnetV3 configured, add following rpc as custom rpc\"), /*#__PURE__*/React.createElement(Paragraph, {\n      copyable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://testnetv3.matic.network\",\n      style: {\n        color: \"#1890ff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 32\n      }\n    }, \"https://testnetv3.matic.network\")), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"You can request Matic Tokens from \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://faucet.matic.network/\",\n      style: {\n        color: \"#1890ff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Faucet\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ad3sh/Documents/Aid Donation/client/src/App.jsx"],"names":["React","Component","Router","Route","Home","history","FactoryPaardarshak","Paardarshak","getWeb3","ExclamationCircleFilled","Paragraph","Text","Link","App","state","storageValue","web3","accounts","parentContract","contract","showmodal","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","setState","instance","Contract","abi","address","console","log","window","ethereum","on","acc","error","alert","render","textAlign","color","fontSize","fontFamily","top"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport { Router, Route } from \"react-router-dom\";\nimport Home from './components/home';\nimport 'antd/dist/antd.css';\nimport history from \"./history\";\nimport { message } from 'antd';\nimport { Spin, Alert } from 'antd';\n//blockchain imports\nimport FactoryPaardarshak from \"./contracts/factorypaardarshak.json\";\nimport Paardarshak from \"./contracts/paardarshak.json\";\nimport getWeb3 from \"./getWeb3\";\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { Typography, Space } from 'antd';\nimport { Modal } from 'antd';\nconst { Paragraph } = Typography;\nconst { Text, Link } = Typography;\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, parentContract: null, contract: null, showmodal: false };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      let accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = FactoryPaardarshak.networks[networkId];\n\n      if (typeof deployedNetwork === 'undefined') {\n        this.setState({ showmodal: true });\n      }\n\n      const instance = new web3.eth.Contract(\n        FactoryPaardarshak.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      console.log(instance)\n      this.setState({ web3, accounts, parentContract: instance });\n\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n\n      window.ethereum.on('accountsChanged', (acc) => {\n        this.setState({ accounts: acc })\n      })\n    } catch (error) {\n\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n\n  };\n\n  render() {\n\n    if (!this.state.web3) {\n      return (\n        <div className=\"loading\">\n          <Spin tip=\"\">\n            <Alert\n              message={<div style={{ textAlign: 'center', color: '#000', fontSize: '22px', fontFamily: '\"Open Sans\", sans-serif' }}>\n                Loading<br />Web3, Accounts, and Contract... <br />\n              </div>\n              }\n              description=\"\"\n              type=\"info\"\n            />\n          </Spin>\n        </div>\n      )\n    }\n    if (!this.state.showmodal) {\n      return (\n        <div className=\"App\">\n          <Router history={history}>\n            <div>\n              <Home web3={this.state} />\n              {/* <Route exact path=\"/\" component={LoginContainer} />\n          <Route exact path=\"/home\" component={HomeContainer} />\n          <Route exact path=\"/snippets\" component={SnippetsContainer} /> */}\n            </div>\n\n          </Router>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.error}\n        <Modal\n          title={<Text style={{ color: \"red\" }} >Incorrect Network</Text>}\n          style={{ top: 20 }\n          }\n          visible={this.state.showmodal}\n\n          footer={[\n            // <Button key=\"Go to Faucet\" onClick={this.handleCancel}>\n            //   Return\n            // </Button>,\n            // <Button key=\"GettinMatic\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n            //   Submit\n            // </Button>,\n          ]}\n        >\n\n          <Space direction=\"vertical\">\n\n            <Text>Please Select Matic TestnetV3 as your network in wallet provider. </Text>\n          </Space>\n          <Text> If you dont have Matic TestnetV3 configured, add following rpc as custom rpc</Text>\n\n          <Paragraph copyable> <a href=\"https://testnetv3.matic.network\" style={{ color: \"#1890ff\" }}>https://testnetv3.matic.network</a></Paragraph>\n\n          <Text>You can request Matic Tokens from </Text>\n          {/* <Link href=\"https://faucet.matic.network/\" target=\"_blank\">\n            Matic Faucet\n    </Link> */}\n          <a href=\"https://faucet.matic.network/\" style={{ color: \"#1890ff\" }}>Faucet</a>\n\n        </Modal >\n      </div >\n\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}