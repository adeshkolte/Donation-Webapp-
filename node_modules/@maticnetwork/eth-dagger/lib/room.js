"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Room = /*#__PURE__*/function () {
  function Room(dagger, room) {
    _classCallCheck(this, Room);

    if (!dagger) {
      throw new Error('`dagger` object is required');
    }

    if (!room) {
      throw new Error('`room` is required');
    }

    this.dagger = dagger;
    this.room = room;
  }

  _createClass(Room, [{
    key: "on",
    value: function on(eventName, listener) {
      this.dagger.on("".concat(this.room, ":").concat(eventName), listener);
      return this;
    }
  }, {
    key: "once",
    value: function once(eventName, listener) {
      this.dagger.once("".concat(this.room, ":").concat(eventName), listener);
      return this;
    }
  }, {
    key: "off",
    value: function off(eventName, listener) {
      this.dagger.off("".concat(this.room, ":").concat(eventName), listener);
      return this;
    }
  }]);

  return Room;
}();

exports["default"] = Room;
module.exports = exports.default;